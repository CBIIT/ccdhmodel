# Data examples demonstrating several proposed approaches for representing coded/enumerated values in the CRDC-H.
# We use GDC.Analyte.analyte_type as our example of an enumerated field. 
# In GDC, this field captures a human readable code for an enumerated set of values.  An Analyte record with three fields is below:

     #      analyte_id                       analyte_uuid                  analyte_type    
     # TCGA-2G-AAGW-01A-11D      d64cba64-7eba-4a09-887d-bfc401edd138          DNA                  

# The full record for this analyte can be found on the GDC website at:
# https://portal.gdc.cancer.gov/cases/3cdbf331-991d-41cb-a694-a2aa95c4aa26?bioId=d64cba64-7eba-4a09-887d-bfc401edd138

# CONTRIBUTOR INSTRUCTIONS:
   # Each proposed approach for representing the enumerated analyte_type data should illustrate how it would capture 
   # both the harmonized canonical value as well as the original source value. And also discuss/illustrate how validation will work.  
   # If some of these feature are supported in structures / artifacts outside of the enumeration object in the data, these should be detailed as well.

###################################################################################################


# Approach 1: Codeable Concepts (current CRDC-H proposal, proposed by DMH team)

# Codable Concepts provide an additional layer of structure to wrap multiple Coding objects, along with a 'text' field to enter data exactly as found in the source 
# We can use one Coding to capture the source value, and another to capture the harmonized/canonical value - and pass both in the data/message
# along with any number of other codings from the same concept from other ontologies/terminologies, if desired. 
# Note in this example values are represented as curies that combine code and system, rather than separate code + system fields.

  identifier:
    - value: tcga:TCGA-2G-AAGW-01A-11D
    - value: gdc-sample:d64cba64-7eba-4a09-887d-bfc401edd138
  analyte_type:
    text: DNA                                                   # A free-text label for the concept (could be used when source data is unstructured, natural langauge values)
    coding:
      - code: C449                                              # The first Coding holds the canonical/harmonized value for this concept - an NCIT term.
        label: DNA                                              # The label of the term as defined in NCIT.
        code_system: https://ncithesaurus.nci.nih.gov/          # URL of the NCIT system (this is likely not the url we would ultimately use)
        code_system_version:  x.x                               # Version of the code system the code came from, if we wanted to provide this 
        value_set: http://CCDH.nci.nih.gov/vs/analyte_type      # Made up url for the value set this code comes from.  The set of enumerated terms in the GDC data dictionary. The value set provides context that gives meaning to the code.
        vaule_set_version: y.y        
        tag: 
          - harmonized
      - code: DNA                                               # The second Coding holds the original code used by the source node (GDC uses a human-readable string for their code).
        label: DNA                                              # The human-readable label (in GDC the code itself is human readable, so the 'label' adds no real value)
        value_set: http://CRDC.nci.nih.gov/gdc/vs/analyte_type  # Made up url for the value set this code comes from.  The set of enumerated terms in the GDC data dictionary. The value set provides context that gives meaning to the code.
        vaule_set_version: x.x
        code_system: http://crdc.nci.nih.gov/gdc                # Made up url for the GDC system - if we wanted to provide this in the data
        code_system_version:  y.y                               # Version of the code system the code came from, if we wanted to provide this
        tag:
          - original

  
  
  
##################################################################################################

# Approach 2: Simple string enum with separate provenance objects within each entity instance, and terminlogy mappings in the schema  (Chris M)

This combines:

 1. A simple enum model for direct representation of the harmonized value
 2. A provenance object for recording both original values/codes plus any information regarding transform

Instance data for analyte:
```yaml
identifiers:
  - tcga:TCGA-2G-AAGW-01A-11D
  - gdc-sample:d64cba64-7eba-4a09-887d-bfc401edd138
analyte_type: DNA


Schema:            # definiton of analyte_type enum - holds mapping to a canonical ontolgy term in the 'meaning' field

```yaml
enums:
  analyte_enum:
    permissible_values:
      DNA:
        text: DNA
        meaning: ncit:C449
        description: ....
      RNA: ...
```

 - Note that when the json/yaml object is interpreted with the schema, the RDF value for analyte_type is the NCIT IRI
 - the provenance object is just an exemplar and the details are not important to illustrate the general approach
    - if we like, we don't need to inline, the provenance objects could get their own ID and be referenced by ID
    - if not inlined, then it could optionally be retrieved by a different service, the same service, etc. These architecture details outside the scope of the model
    - the provenance object can be as broad, deep, detailed, extensible as we like. Not shown but we could have:
       - the "agent" making the change
       - time of ETL transformation
       - link to any mappings used
       - etc
   
   
   
   
   
   
   
   
   
   # Matt's interpretation of Chris' proposal: This 'was_generated_by' field would appear once within each object in the data (here a Specimen).  
# It holds an array of objects that each describe the provenance of a single field/value in the Specimen instance (main thing here is the value from the source data).  
# The 'target' of each provenance object is specified by naming the 'field' it describes (but we also may need to indicate the field value if the target field is multivalued) 
# The details of how provenance and mappings are not fully fleshed out below - the example is just intended to show the structure this might take.
was_generated_by:                       
  # inlining for illustrative purposes. this could get its own ID and be referenced by ID. the specific details are not so important here
  description: ...
  started_at_time: ...
  inputs:
    - source: tcga:TCGA-2G-AAGW-01A-11D
      field: analyte_type
      value:
        - id: NCIt:C449
          name: DNA
          version: ....
    - source: gdc-sample:d64cba64-7eba-4a09-887d-bfc401edd138
      value:
        - id: gdc:DNA
          name: DNA
          version: ....
```
